.TH std::chrono::system_clock::now 3 "2022.07.31" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::chrono::system_clock::now \- std::chrono::system_clock::now

.SH Synopsis
   static std::chrono::time_point<std::chrono::system_clock> now()        \fI(since C++11)\fP
   noexcept;

   Returns a time point representing the current point in time.

.SH Parameters

   \fI(none)\fP

.SH Return value

   A time point representing the current time.

.SH Example


// Run this code

 #include <iostream>
 #include <iomanip>
 #include <vector>
 #include <numeric>
 #include <chrono>

 volatile int sink;
 int main()
 {
     std::cout << std::fixed << std::setprecision(9) << std::left;
     for (auto size = 1ull; size < 1000'000'000ull; size *= 100) {
         // record start time
         auto start = std::chrono::system_clock::now();
         // do some work
         std::vector<int> v(size, 42);
         sink = std::accumulate(v.begin(), v.end(), 0u); // make sure it's a side effect
         // record end time
         auto end = std::chrono::system_clock::now();
         std::chrono::duration<double> diff = end - start;
         std::cout << "Time to fill and iterate a vector of " << std::setw(9)
                   << size << " ints : " << diff.count() << " s\\n";
     }
 }

.SH Possible output:

 Time to fill and iterate a vector of 1         ints : 0.000006568 s
 Time to fill and iterate a vector of 100       ints : 0.000002854 s
 Time to fill and iterate a vector of 10000     ints : 0.000116290 s
 Time to fill and iterate a vector of 1000000   ints : 0.011742752 s
 Time to fill and iterate a vector of 100000000 ints : 0.505534949 s
