.TH std::chrono::operator+,std::chrono::operator-(std::chrono::day) 3 "2022.07.31" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::chrono::operator+,std::chrono::operator-(std::chrono::day) \- std::chrono::operator+,std::chrono::operator-(std::chrono::day)

.SH Synopsis
   Defined in header <chrono>
   constexpr std::chrono::day operator+( const std::chrono::day& d,   \fB(1)\fP \fI(since C++20)\fP
   const std::chrono::days& ds ) noexcept;
   constexpr std::chrono::day operator+( const std::chrono::days& ds, \fB(2)\fP \fI(since C++20)\fP
   const std::chrono::day& d ) noexcept;
   constexpr std::chrono::day operator-( const std::chrono::day& d,   \fB(3)\fP \fI(since C++20)\fP
   const std::chrono::days& ds ) noexcept;
   constexpr std::chrono::days operator-( const std::chrono::day& x,  \fB(4)\fP \fI(since C++20)\fP
   const std::chrono::day& y ) noexcept;

   1-2) Adds ds.count() days to d.
   3) Subtracts ds.count() days from d.
   4) Calculate the difference, in days, between two day x and y.

.SH Return value

   1-2) std::chrono::day(unsigned(d) + ds.count())
   3) std::chrono::day(unsigned(d) - ds.count())
   4) std::chrono::days(int(unsigned(x)) - int(unsigned(y)))

.SH Notes

   For (1-3), if the result would be outside the range [0, 255], the actual stored
   value is unspecified.

.SH Example


// Run this code

 #include <chrono>
 #include <cassert>

 int main()
 {
     std::chrono::day d {15};

     d = d + std::chrono::days(2);
     assert(d == std::chrono::day(17));

     d = d - std::chrono::days(3);
     assert(d == std::chrono::day(14));

     constexpr std::chrono::days ds = std::chrono::day(16) - std::chrono::day(14);
     static_assert(ds == std::chrono::days(2));
 }

.SH See also

   operator++
   operator++(int) increments or decrements the day
   operator--      \fI(public member function)\fP
   operator--(int)
   operator+=      adds or subtracts a number of days
   operator-=      \fI(public member function)\fP
