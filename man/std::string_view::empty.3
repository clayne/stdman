.TH std::basic_string_view::empty 3 "2022.07.31" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::basic_string_view::empty \- std::basic_string_view::empty

.SH Synopsis
   constexpr bool empty() const noexcept;                \fI(since C++17)\fP
                                                         \fI(until C++20)\fP
   [[nodiscard]] constexpr bool empty() const noexcept;  \fI(since C++20)\fP

   Checks if the view has no characters, i.e. whether size() == 0.

.SH Parameters

   \fI(none)\fP

.SH Return value

   true if the view is empty, false otherwise

.SH Complexity

   Constant.

.SH Example


// Run this code

 #include <string_view>
 #include <iostream>

 void check_string(std::string_view ref)
 {
         // Print a string surrounded by single quotes, its length
         // and whether it is considered empty.
         std::cout << std::boolalpha
                   << "'" << ref << "' has " << ref.size()
                   << " character(s); emptiness: " << ref.empty() << '\\n';
 }

 int main(int argc, char **argv)
 {
         // An empty string
         check_string("");

         // Almost always not empty: argv[0]
         if (argc > 0)
                 check_string(argv[0]);
 }

.SH Possible output:

 '' has 0 character(s); emptiness: true
 './a.out' has 7 character(s); emptiness: false

.SH See also

   size     returns the number of characters
   length   \fI(public member function)\fP
   \fI(C++17)\fP
   max_size returns the maximum number of characters
   \fI(C++17)\fP  \fI(public member function)\fP
   size
   ssize    returns the size of a container or array
   \fI(C++17)\fP  \fI(function template)\fP
   (C++20)
   empty    checks whether the container is empty
   \fI(C++17)\fP  \fI(function template)\fP
   empty    checks whether the string is empty
            \fI(public member function of std::basic_string<CharT,Traits,Allocator>)\fP
