.TH std::basic_string_view::find_last_of 3 "2022.07.31" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::basic_string_view::find_last_of \- std::basic_string_view::find_last_of

.SH Synopsis
   constexpr size_type find_last_of( basic_string_view v, size_type   \fB(1)\fP \fI(since C++17)\fP
   pos = npos ) const noexcept;
   constexpr size_type find_last_of( CharT c, size_type pos = npos )  \fB(2)\fP \fI(since C++17)\fP
   const noexcept;
   constexpr size_type find_last_of( const CharT* s, size_type pos,   \fB(3)\fP \fI(since C++17)\fP
   size_type count ) const;
   constexpr size_type find_last_of( const CharT* s, size_type pos =  \fB(4)\fP \fI(since C++17)\fP
   npos ) const;

   Finds the last character equal to one of characters in the given character sequence.
   Exact search algorithm is not specified. The search considers only the interval [0;
   pos]. If the character is not present in the interval, npos will be returned.

   1) Finds the last occurence of any of the characters of v in this view, ending at
   position pos.
   2) Equivalent to find_last_of(basic_string_view(std::addressof(c), 1), pos).
   3) Equivalent to find_last_of(basic_string_view(s, count), pos).
   4) Equivalent to find_last_of(basic_string_view(s), pos).

.SH Parameters

   v     - view to search for
   pos   - position at which the search is to finish
   count - length of the string of characters to search for
   s     - pointer to a string of characters to search for
   ch    - character to search for

.SH Return value

   Position of the last occurrence of any character of the substring, or npos if no
   such character is found.

.SH Complexity

   O(size() * v.size()) at worst.

.SH Example


// Run this code

 #include <string_view>
 #include <iostream>

 int main()
 {
   using namespace std::literals;
   constexpr auto N = std::string_view::npos;

   static_assert(
     5 == "delete"sv.find_last_of("cdef"sv) &&
       //       └────────────────────┘
     N == "double"sv.find_last_of("fghi"sv) &&
       //
     0 == "else"sv.find_last_of("bcde"sv, 2 /* pos [0..2]: "els" */) &&
       //  └────────────────────────┘
     N == "explicit"sv.find_last_of("abcd"sv, 4 /* pos [0..4]: "expli" */) &&
       //
     3 == "extern"sv.find_last_of('e') &&
       //     └────────────────────┘
     N == "false"sv.find_last_of('x') &&
       //
     0 == "inline"sv.find_last_of('i', 2 /* pos [0..2]: "inl" */) &&
       //  └───────────────────────┘
     N == "mutable"sv.find_last_of('a', 2 /* pos [0..2]: "mut" */) &&
       //
     3 == "namespace"sv.find_last_of("cdef", 3 /* pos [0..3]: "name" */, 3 /* "cde" */) &&
       //     └─────────────────────────┘
     N == "namespace"sv.find_last_of("cdef", 3 /* pos [0..3]: "name" */, 2 /* "cd" */)
   );

   std::cout << "All tests passed.\\n";
 }

.SH Output:

 All tests passed.

.SH See also

   find              find characters in the view
   \fI(C++17)\fP           \fI(public member function)\fP
   rfind             find the last occurrence of a substring
   \fI(C++17)\fP           \fI(public member function)\fP
   find_first_of     find first occurrence of characters
   \fI(C++17)\fP           \fI(public member function)\fP
   find_first_not_of find first absence of characters
   \fI(C++17)\fP           \fI(public member function)\fP
   find_last_not_of  find last absence of characters
   \fI(C++17)\fP           \fI(public member function)\fP
                     find last occurrence of characters
   find_last_of      \fI\fI(public member\fP function of\fP
                     std::basic_string<CharT,Traits,Allocator>)
