.TH std::array::rbegin,std::array::crbegin 3 "2022.07.31" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::array::rbegin,std::array::crbegin \- std::array::rbegin,std::array::crbegin

.SH Synopsis
   reverse_iterator rbegin() noexcept;                         \fI(until C++17)\fP
   constexpr reverse_iterator rbegin() noexcept;               \fI(since C++17)\fP
   const_reverse_iterator rbegin() const noexcept;             \fI(until C++17)\fP
   constexpr const_reverse_iterator rbegin() const noexcept;   \fI(since C++17)\fP
   const_reverse_iterator crbegin() const noexcept;            \fI(until C++17)\fP
   constexpr const_reverse_iterator crbegin() const noexcept;  \fI(since C++17)\fP

   Returns a reverse iterator to the first element of the reversed array. It
   corresponds to the last element of the non-reversed array. If the array is empty,
   the returned iterator is equal to rend().

   range-rbegin-rend.svg

.SH Parameters

   \fI(none)\fP

.SH Return value

   Reverse iterator to the first element.

.SH Complexity

   Constant.

.SH Example


// Run this code

 #include <algorithm>
 #include <iostream>
 #include <string>
 #include <string_view>
 #include <array>

 int main()
 {
     constexpr std::array<std::string_view, 8> data = {"▁","▂","▃","▄","▅","▆","▇","█"};

     std::array<std::string, std::size(data)> arr;

     std::copy(data.cbegin(), data.cend(), arr.begin());
     //             ^              ^           ^

     auto print = [](const std::string_view s) { std::cout << s << ' '; };

     print("Print 'arr' in direct order using [cbegin, cend):\\t");
     std::for_each(arr.cbegin(), arr.cend(), print);
     //                ^             ^
     print("\\n\\nPrint 'arr' in reverse order using [crbegin, crend):\\t");
     std::for_each(arr.crbegin(), arr.crend(), print);
     //                ^^             ^^
     print("\\n");
 }

.SH Output:

 Print 'arr' in direct order using [cbegin, cend):        ▁ ▂ ▃ ▄ ▅ ▆ ▇ █

 Print 'arr' in reverse order using [crbegin, crend):     █ ▇ ▆ ▅ ▄ ▃ ▂ ▁

.SH See also

   rend    returns a reverse iterator to the end
   crend   \fI(public member function)\fP
   \fI(C++11)\fP
   rbegin  returns a reverse iterator to the beginning of a container or array
   crbegin \fI(function template)\fP
   \fI(C++14)\fP
