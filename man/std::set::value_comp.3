.TH std::set::value_comp 3 "2022.07.31" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::set::value_comp \- std::set::value_comp

.SH Synopsis
   std::set::value_compare value_comp() const;

   Returns the function object that compares the values. It is the same as key_comp.

.SH Parameters

   \fI(none)\fP

.SH Return value

   The value comparison function object.

.SH Complexity

   Constant.

.SH Example


// Run this code

 #include <cassert>
 #include <iostream>
 #include <set>

 // Example module 97 key compare function
 struct ModCmp {
     bool operator()(const int lhs, const int rhs) const
     {
         return (lhs % 97) < (rhs % 97);
     }
 };

 int main()
 {
     std::set<int, ModCmp> cont{1, 2, 3, 4, 5};

     // Same behaviour as key_comp()
     auto comp_func = cont.value_comp();

     const int val = 100;

     for (int key : cont) {
         bool before = comp_func(key, val);
         bool after = comp_func(val, key);
         if (!before && !after)
             std::cout << key << " equivalent to key " << val << '\\n';
         else if (before)
             std::cout << key << " goes before key " << val << '\\n';
         else if (after)
             std::cout << key << " goes after key " << val << '\\n';
         else
             assert(0); // Cannot happen
     }
 }

.SH Output:

 1 goes before key 100
 2 goes before key 100
 3 equivalent to key 100
 4 goes after key 100
 5 goes after key 100

.SH See also

   key_comp returns the function that compares keys
            \fI(public member function)\fP
