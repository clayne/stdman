.TH std::stop_token::stop_possible 3 "2022.07.31" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::stop_token::stop_possible \- std::stop_token::stop_possible

.SH Synopsis
   [[nodiscard]] bool stop_possible() const noexcept;  \fI(since C++20)\fP

   Checks if the stop_token object has associated stop-state, and that state either has
   already had a stop requested or it has associated std::stop_source object(s).

   A default constructed stop_token has no associated stop-state, and thus cannot be
   stopped; the associated stop-state for which no std::stop_source object(s) exist can
   also not be stopped if such a request has not already been made.

.SH Parameters

   \fI(none)\fP

.SH Return value

   false if the stop_token object has no associated stop-state, or it did not yet
   receive a stop request and there are no associated std::stop_source object(s); true
   otherwise.

.SH Notes

   If the stop_token object has associated stop-state and a stop request has already
   been made, this function still returns true.

   If the stop_token object has associated stop-state from a std::jthread—for
   example, the stop_token was retrieved by invoking get_stop_token() on a std::jthread
   object—then this function always returns true. A std::jthread always has an
   internal std::stop_source object, even if the thread's invoking function does not
   check it.

.SH Example

    This section is incomplete
    Reason: no example
