.TH std::ranges::transform_view::sentinel 3 "2022.07.31" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::ranges::transform_view::sentinel \- std::ranges::transform_view::sentinel

.SH Synopsis
   template< bool Const >  \fI(since C++20)\fP
   class /*sentinel*/

   The return type of transform_view::end when the underlying view is not a
   common_range.

   The type /*sentinel*/<true> is returned by the const-qualified overload. The type
   /*sentinel*/<false> is returned by the non-const-qualified overload.

   The name of this class template (shown here as /*sentinel*/) is unspecified.

   Typical implementation holds only one data member: a sentinel obtained from
   (possibly const-qualified) V.

.SH Member types

   Member type      Definition
   Parent (private) const transform_view<V, F> if Const is true, otherwise
                    transform_view<V, F>. The name is for exposition only
   Base (private)   const V if Const is true, otherwise V. The name is for exposition
                    only

.SH Member functions

   constructor   constructs a sentinel
   (C++20)       \fI(public member function)\fP
   base          returns the underlying sentinel
   (C++20)       \fI(public member function)\fP

.SH Non-member functions

   operator== compares a sentinel with an iterator returned from transform_view::begin
   (C++20)    \fI(function)\fP
   operator-  computes the distance between a sentinel and an iterator returned from
   (C++20)    transform_view::begin
              \fI(function)\fP
