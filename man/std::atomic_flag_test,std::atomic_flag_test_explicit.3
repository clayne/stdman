.TH std::atomic_flag_test,std::atomic_flag_test_explicit 3 "2022.07.31" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::atomic_flag_test,std::atomic_flag_test_explicit \- std::atomic_flag_test,std::atomic_flag_test_explicit

.SH Synopsis
   Defined in header <atomic>
   bool atomic_flag_test( const volatile
   std::atomic_flag* object ) noexcept;
   bool atomic_flag_test( const std::atomic_flag*
   object ) noexcept;
   bool atomic_flag_test_explicit( const volatile \fB(1)\fP \fI(since C++20)\fP
   std::atomic_flag* object,
   std::memory_order order ) noexcept;                              \fB(2)\fP \fI(since C++20)\fP
   bool atomic_flag_test_explicit( const
   std::atomic_flag* object,
   std::memory_order order ) noexcept;

   Atomically reads the value of the *object and returns the value.

   1) Equivalent to object->test(std::memory_order_seq_cst).
   2) Equivalent to object->test(order).

.SH Parameters

   object - pointer to the atomic_flag object to read
   order  - the memory synchronization ordering for this operation: must not be
            std::memory_order::release or std::memory_order::acq_rel

.SH Return value

   The value atomically read.

.SH Notes

   Feature-test macro: __cpp_lib_atomic_flag_test

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   test    atomically returns the value of the flag
   (C++20) \fI(public member function of std::atomic_flag)\fP
