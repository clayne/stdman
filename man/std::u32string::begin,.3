.TH std::basic_string::begin, 3 "2022.07.31" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::basic_string::begin, \- std::basic_string::begin,

.SH Synopsis

   iterator begin();                          \fI(until C++11)\fP
   iterator begin() noexcept;                 \fI(since C++11)\fP
                                              \fI(until C++20)\fP
   constexpr iterator begin()                 \fI(since C++20)\fP
   noexcept;
   const_iterator begin() const;                            \fI(until C++11)\fP
   const_iterator begin() const       \fB(1)\fP                   \fI(since C++11)\fP
   noexcept;                                                \fI(until C++20)\fP
   constexpr const_iterator begin()                         \fI(since C++20)\fP
   const noexcept;                        \fB(2)\fP
   const_iterator cbegin() const                                          \fI(since C++11)\fP
   noexcept;                                  \fB(3)\fP                         \fI(until C++20)\fP
   constexpr const_iterator cbegin()                                      \fI(since C++20)\fP
   const noexcept;

   Returns an iterator to the first character of the string.

   begin() returns a mutable or constant iterator, depending on the constness of *this.

   cbegin() always returns a constant iterator. It is equivalent to const_cast<const
   basic_string&>(*this).begin().

   range-begin-end.svg

.SH Parameters

   \fI(none)\fP

.SH Return value

   iterator to the first character

.SH Complexity

   Constant

.SH Example


// Run this code

 #include <string>
 #include <iostream>

 int main()
 {
     std::string s("Exemplar");
     *s.begin() = 'e';
     std::cout << s <<'\\n';

     auto i = s.cbegin();
     std::cout << *i << '\\n';
 //  *i = 'E'; // error: i is a constant iterator
 }

.SH Output:

 exemplar
 e

.SH See also

   end     returns an iterator to the end
   cend    \fI(public member function)\fP
   \fI(C++11)\fP
   begin   returns an iterator to the beginning
   cbegin  \fI(public member function of std::basic_string_view<CharT,Traits>)\fP
   \fI(C++17)\fP
