.TH std::chrono::operator==,(std::chrono::day) 3 "2022.07.31" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::chrono::operator==,(std::chrono::day) \- std::chrono::operator==,(std::chrono::day)

.SH Synopsis
   Defined in header <chrono>
   constexpr bool operator==( const std::chrono::day& x,              \fB(1)\fP \fI(since C++20)\fP
   const std::chrono::day& y ) noexcept;
   constexpr std::strong_ordering operator<=>( const
   std::chrono::day& x,                                               \fB(2)\fP \fI(since C++20)\fP
   const std::chrono::day& y ) noexcept;

   Compare the two std::chrono::day x and y.

   The <, <=, >, >=, and != operators are synthesized from operator<=> and operator==
   respectively.

.SH Return value

   1) unsigned(x) == unsigned(y)
   2) unsigned(x) <=> unsigned(y)

.SH Example


// Run this code

 #include <iostream>
 #include <chrono>

 int main()
 {
     std::chrono::day d1{15};
     std::chrono::day d2{20};

     d1 == d2 ? std::cout << "d1 and d2 are equal\\n"
              : std::cout << "d1 and d2 are not equal\\n";

     using namespace std::literals::chrono_literals;

     std::cout << std::boolalpha
               << (6d < 9d) << ' ' << (6d == 6d) << ' ' << (6d <= 9d) << ' '
               << (9d > 6d) << ' ' << (9d != 6d) << ' ' << (9d >= 6d) << '\\n';
 }

.SH Output:

 d1 and d2 are not equal
 true true true true true true
