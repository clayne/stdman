.TH std::erase_if(std::unordered_multimap) 3 "2022.07.31" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::erase_if(std::unordered_multimap) \- std::erase_if(std::unordered_multimap)

.SH Synopsis
   Defined in header <unordered_map>
   template< class Key, class T, class Hash, class KeyEqual, class Alloc,
   class Pred >
                                                                                (since
   typename std::unordered_multimap<Key,T,Hash,KeyEqual,Alloc>::size_type       C++20)

   erase_if( std::unordered_multimap<Key,T,Hash,KeyEqual,Alloc>& c, Pred pred
   );

   Erases all elements that satisfy the predicate pred from the container. Equivalent
   to

 auto old_size = c.size();
 for (auto i = c.begin(), last = c.end(); i != last; ) {
   if (pred(*i)) {
     i = c.erase(i);
   } else {
     ++i;
   }
 }
 return old_size - c.size();

.SH Parameters

   c    - container from which to erase
   pred - predicate that returns true if the element should be erased

.SH Return value

   The number of erased elements.

.SH Complexity

   Linear.

.SH Example


// Run this code

 #include <unordered_map>
 #include <iostream>

 template<typename Os, typename Container>
 inline Os& operator<<(Os& os, Container const& cont)
 {
     os << "{";
     for (const auto& item : cont) {
         os << "{" << item.first << ", " << item.second << "}";
     }
     return os << "}";
 }

 int main()
 {
     std::unordered_multimap<int, char> data {{1, 'a'},{2, 'b'},{3, 'c'},{4, 'd'},
                                              {5, 'e'},{4, 'f'},{5, 'g'},{5, 'g'}};
     std::cout << "Original:\\n" << data << '\\n';

     const auto count = std::erase_if(data, [](const auto& item) {
         auto const& [key, value] = item;
         return (key & 1) == 1;
     });

     std::cout << "Erase items with odd keys:\\n" << data << '\\n'
               << count << " items removed.\\n";
 }

.SH Possible output:

 Original:
 {{5, g}{5, g}{5, e}{4, f}{4, d}{3, c}{2, b}{1, a}}
 Erase items with odd keys:
 {{4, f}{4, d}{2, b}}
 5 items removed.

.SH See also

   remove    removes elements satisfying specific criteria
   remove_if \fI(function template)\fP
