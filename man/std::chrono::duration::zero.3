.TH std::chrono::duration::zero 3 "2022.07.31" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::chrono::duration::zero \- std::chrono::duration::zero

.SH Synopsis
   static constexpr duration zero();           \fI(until C++20)\fP
   static constexpr duration zero() noexcept;  \fI(since C++20)\fP

   Returns a zero-length duration.

   If the representation rep of the duration requires some other implementation to
   return a zero-length duration, std::chrono::duration_values can be specialized to
   return the desired value.

.SH Parameters

   \fI(none)\fP

.SH Return value

   returns duration(std::chrono::duration_values<rep>::zero())

.SH Example


// Run this code

 #include <chrono>
 #include <ratio>
 int main() {
     static_assert((std::chrono::hours::zero() == std::chrono::nanoseconds::zero()) &&
                   (std::chrono::duration<short, std::nano>::zero() ==
                    std::chrono::duration<int, std::deci>::zero()) &&
                   (std::chrono::duration<short, std::deca>::zero() ==
                    std::chrono::duration<long, std::exa>::zero()) &&
                   (std::chrono::duration<long, std::atto>::zero().count() ==
                    std::chrono::duration<float, std::exa>::zero().count()));
 }

.SH See also

   min      returns the special duration value min
   \fB[static]\fP \fI(public static member function)\fP
   max      returns the special duration value max
   \fB[static]\fP \fI(public static member function)\fP
