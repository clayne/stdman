.TH std::bitset::set 3 "2022.07.31" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::bitset::set \- std::bitset::set

.SH Synopsis
   bitset& set();                                           \fI(until C++11)\fP
   bitset& set() noexcept;                                  \fI(since C++11)\fP
                                                            (until C++23)
   constexpr bitset& set() noexcept;                \fB(1)\fP     (since C++23)
   bitset& set( std::size_t pos, bool value = true                        (until C++23)
   );                                                   \fB(2)\fP
   constexpr bitset& set( std::size_t pos, bool                           (since C++23)
   value = true );

   Sets all bits to true or to specified value.

   1) Sets all bits to true.
   2) Sets the bit at position pos to the value value.

.SH Parameters

   pos   - the position of the bit to set (least significant to most significant)
   value - the value to set the bit to

.SH Return value

   *this

.SH Exceptions

   2) Throws std::out_of_range if pos does not correspond to a valid position within
   the bitset.

.SH Example


// Run this code

 #include <iostream>
 #include <bitset>

 int main()
 {
     std::bitset<8> b;
     std::cout << b << '\\n';
     std::cout << b.set() << '\\n';
     std::cout << b.reset() << '\\n';

     for (size_t i = 1; i < b.size(); i += 2) {
         b.set(i);
     }
     std::cout << b << '\\n';
 }

.SH Output:

 00000000
 11111111
 00000000
 10101010

.SH See also

   reset sets bits to false
         \fI(public member function)\fP
   flip  toggles the values of bits
         \fI(public member function)\fP
