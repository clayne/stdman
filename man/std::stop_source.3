.TH std::stop_source 3 "2022.07.31" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::stop_source \- std::stop_source

.SH Synopsis
   Defined in header <stop_token>
   class stop_source;              \fI(since C++20)\fP

   The stop_source class provides the means to issue a stop request, such as for
   std::jthread cancellation. A stop request made for one stop_source object is visible
   to all stop_sources and std::stop_tokens of the same associated stop-state; any
   std::stop_callback(s) registered for associated std::stop_token(s) will be invoked,
   and any std::condition_variable_any objects waiting on associated std::stop_token(s)
   will be awoken.

   Once a stop is requested, it cannot be withdrawn. Additional stop requests have no
   effect.

.SH Member functions

   constructor    constructs new stop_source object
                  \fI(public member function)\fP
   destructor     destructs the stop_source object
                  \fI(public member function)\fP
   operator=      assigns the stop_source object
                  \fI(public member function)\fP
.SH Modifiers
   request_stop   makes a stop request for the associated stop-state, if any
                  \fI(public member function)\fP
   swap           swaps two stop_source objects
                  \fI(public member function)\fP
.SH Observers
   get_token      returns a stop_token for the associated stop-state
                  \fI(public member function)\fP
   stop_requested checks whether the associated stop-state has been requested to stop
                  \fI(public member function)\fP
   stop_possible  checks whether associated stop-state can be requested to stop
                  \fI(public member function)\fP

.SH Non-member functions

   operator==             compares two std::stop_source objects
                          \fI(function)\fP
   swap(std::stop_source) specializes the std::swap algorithm
   (C++20)                \fI(function)\fP

  Helper constants

   nostopstate a std::nostopstate_t instance for use in stop_source constructor
   (C++20)     (constant)

.SH Helper classes

   nostopstate_t placeholder type for use in stop_source constructor
   (C++20)       \fI(class)\fP

.SH Notes

   For the purposes of std::jthread cancellation the stop_source object should be
   retrieved from the std::jthread object using get_stop_source(); or stop should be
   requested directly from the std::jthread object using request_stop(). This will then
   use the same associated stop-state as that passed into the std::jthread's invoked
   function argument (i.e., the function being executed on its thread).

   For other uses, however, a stop_source can be constructed separately using the
   default constructor, which creates new stop-state.

   Feature-test macro: __cpp_lib_jthread

.SH Example

    This section is incomplete
    Reason: no example
