.TH std::atomic::notify_all 3 "2022.07.31" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::atomic::notify_all \- std::atomic::notify_all

.SH Synopsis
   void notify_all() noexcept;           \fI(since C++20)\fP
   void notify_all() volatile noexcept;

   Performs atomic notifying operations.

   Unblocks all threads blocked in atomic waiting operations (i.e. wait()) on *this, if
   there are any; otherwise does nothing.

.SH Return value

   \fI(none)\fP

.SH Notes

   This form of change-detection is often more efficient than simple polling or pure
   spinlocks.

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   wait                 blocks the thread until notified and the atomic value changes
   (C++20)              \fI(public member function)\fP
   atomic_wait
   atomic_wait_explicit blocks the thread until notified and the atomic value changes
   (C++20)              \fI(function template)\fP
   (C++20)
   atomic_notify_one    notifies a thread blocked in atomic_wait
   (C++20)              \fI(function template)\fP
