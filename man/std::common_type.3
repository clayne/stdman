.TH std::common_type 3 "2022.07.31" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::common_type \- std::common_type

.SH Synopsis
   Defined in header <utility>
   template< class T1, class T2, class U1, class U2 >

   requires requires { typename std::pair<std::common_type_t<T1, U1>,  (since C++23)
   std::common_type_t<T2, U2>>; }

   struct common_type<std::pair<T1, T2>, std::pair<U1, U2>>;

   The common type of two pairs is a pair of both common types of corresponding element
   types of both pairs.

   The common type is defined only if both pairs of corresponding element types have
   common types.

.SH Member types

   Member type Definition
   type        std::pair<std::common_type_t<T1, U1>, std::common_type_t<T2, U2>>

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   common_type                  determines the common type of a group of types
   \fI(C++11)\fP                      \fI(class template)\fP
   std::common_type<tuple-like> determines the common type of a tuple and a tuple-like
   (C++23)                      type
                                \fI(class template specialization)\fP
